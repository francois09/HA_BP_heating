blueprint:
  name: Room link status
  description: React to door/windows sensors for setting up link of a room
  domain: automation
  source_url: https://github.com/francois09/HA_blueprints/heater_room_link.yaml
  input:
    climate_valve:
      name: Climate valve
      description: Room TRV (viewed as Climate)
      selector:
        entity:
          domain: climate
    valve_child_lock:
      name: Valve child lock
      description: Room TRV child lock
      selector:
        entity:
          domain: lock
    inside_aperture_sensor:
      name: Inside aperture
      description: Room sensor for door opening. Open means room is connected to the house.
      selector:
        entity:
          domain: binary_sensor
          multiple: true
    outside_aperture_sensor:
      name: Outside aperture
      description: Room sensor for window opening. Open means room is connected to outside.
      selector:
        entity:
          domain: binary_sensor
          multiple: true
    trigging_timer:
      name: Timer to trigger event
      description: Global timer used for managing room link status.
      selector:
        entity:
          domain: timer
    room_link_select:
      name: Room link status
      description: The way the room is connected to environment. Inside, Outside, Both or None.
      selector:
        entity:
          domain: input_select
    winter_mode_boolean:
      name: Winter switch
      description: Global switch to say it's winter or not.
      selector:
        entity:
          domain: input_boolean
    setpoint_automation:
      name: Setpoint compute automation
      description: The automation in charge to compute setpoint for the room. Called "Room heating setpoint compute"
      selector:
        entity:
          domain: automation
    request_heater:
      name: Request heater switch
      description: Room helper for triggering heating system (boiler)
      selector:
        entity:
          domain: input_boolean
    freeze_temp_number:
      name: Freeze temperature value
      description: Minimal freeze protection TÂ°
      default: 5
      selector:
        number:
          min: 1
          max: 10
    debounce_boolean:
      name: Debounce valve update
      description: Specific debounce valve boolean
      selector:
        entity:
          domain: input_boolean

mode: restart
max_exceeded: silent

variables:
  local_freeze_temp: !input freeze_temp_number
  local_climate_valve: !input climate_valve

trigger:
- platform: state
  entity_id: !input trigging_timer
  to: idle
  id: TriggeredByTimer
- platform: state
  entity_id: !input inside_aperture_sensor
- platform: state
  entity_id: !input outside_aperture_sensor

condition:
  - condition: state
    entity_id: !input winter_mode_boolean
    state: 'on'

action:
- choose:
  ### Started by something else than timer
  - conditions:
    - condition: not
      conditions:
        - condition: trigger
          id:
            - TriggeredByTimer
    sequence:
      - service: timer.start
        data:
          duration: '0:03:00'
        target:
          entity_id: !input trigging_timer
      
  ### Started by timer, both aperture are open -> Set room link to 'Both'
  - conditions:
    - condition: trigger
      id:
        - TriggeredByTimer
    - condition: state
      entity_id: !input inside_aperture_sensor
      state: 'on'
    - condition: state
      entity_id: !input outside_aperture_sensor
      state: 'on'
    sequence:
    - if:
      - condition: state
        entity_id: !input room_link_select
        state: Outside
      then:
      - service: lock.unlock
        data: {}
        target:
          entity_id: !input valve_child_lock
      - service: climate.turn_on
        data: {}
        target:
          entity_id: !input climate_valve
      - service: automation.trigger
        data: {}
        target:
          entity_id: !input setpoint_automation
    - service: input_select.select_option
      data:
        option: 'Both'
      target:
        entity_id: !input room_link_select
    # - service: input_boolean.turn_on
    #   data: {}
    #   target:
    #     entity_id: !input shutdown_heater_boolean
      
  ### Started by timer, outside aperture are open -> stop and lock valve
  - conditions:
    - condition: trigger
      id:
        - TriggeredByTimer
    - condition: state
      entity_id: !input inside_aperture_sensor
      state: 'off'
    - condition: state
      entity_id: !input outside_aperture_sensor
      state: 'on'
    sequence:
    - if:
      - condition: template
        value_template: '{{ state_attr(local_climate_valve, ''temperature'')|float != local_freeze_temp|float }}'
      then:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: !input debounce_boolean
      - service: climate.set_temperature
        data_template:
          temperature: '{{ local_freeze_temp }}'
          entity_id: !input climate_valve
    - service: climate.turn_off
      data: {}
      target:
        entity_id: !input climate_valve
    - service: lock.lock
      data: {}
      target:
        entity_id: !input valve_child_lock
    - service: input_boolean.turn_off
      data: {}
      target:
        entity_id: !input request_heater

    - service: input_select.select_option
      data:
        option: 'Outside'
      target:
        entity_id: !input room_link_select

  ### Started by timer, inside aperture are open -> unlock and start valve
  - conditions:
    - condition: trigger
      id:
        - TriggeredByTimer
    - condition: state
      entity_id: !input inside_aperture_sensor
      state: 'on'
    - condition: state
      entity_id: !input outside_aperture_sensor
      state: 'off'
    sequence:
    - if:
      - condition: state
        entity_id: !input room_link_select
        state: Outside
      then:
      - service: lock.unlock
        data: {}
        target:
          entity_id: !input valve_child_lock
      - service: climate.turn_on
        data: {}
        target:
          entity_id: !input climate_valve
      - service: automation.trigger
        data: {}
        target:
          entity_id: !input setpoint_automation
    - service: input_select.select_option
      data:
        option: 'Inside'
      target:
        entity_id: !input room_link_select

  ### Started by timer, none aperture are open
  - conditions:
    - condition: trigger
      id:
        - TriggeredByTimer
    - condition: state
      entity_id: !input inside_aperture_sensor
      state: 'off'
    - condition: state
      entity_id: !input outside_aperture_sensor
      state: 'off'
    sequence:
    - if:
      - condition: state
        entity_id: !input room_link_select
        state: Outside
      then:
      - service: lock.unlock
        data: {}
        target:
          entity_id: !input valve_child_lock
      - service: climate.turn_on
        data: {}
        target:
          entity_id: !input climate_valve
      - service: automation.trigger
        data: {}
        target:
          entity_id: !input setpoint_automation
    - service: input_select.select_option
      data:
        option: 'None'
      target:
        entity_id: !input room_link_select
